"use strict";(self.webpackChunk_weareseeed_react_square_payments_docs=self.webpackChunk_weareseeed_react_square_payments_docs||[]).push([[912],{4137:function(e,n,t){t.d(n,{Zo:function(){return d},kt:function(){return m}});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function p(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=r.createContext({}),s=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},d=function(e){var n=s(e.components);return r.createElement(l.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},u=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,d=p(e,["components","mdxType","originalType","parentName"]),u=s(t),m=a,f=u["".concat(l,".").concat(m)]||u[m]||c[m]||o;return t?r.createElement(f,i(i({ref:n},d),{},{components:t})):r.createElement(f,i({ref:n},d))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=u;var p={};for(var l in n)hasOwnProperty.call(n,l)&&(p[l]=n[l]);p.originalType=e,p.mdxType="string"==typeof e?e:a,i[1]=p;for(var s=2;s<o;s++)i[s]=t[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},2668:function(e,n,t){t.r(n),t.d(n,{assets:function(){return d},contentTitle:function(){return l},default:function(){return m},frontMatter:function(){return p},metadata:function(){return s},toc:function(){return c}});var r=t(7462),a=t(3366),o=(t(7294),t(4137)),i=["components"],p={id:"gift-card-props",title:"GiftCard - Props",slug:"/gift-card/props",sidebar_label:"Props",sidebar_position:2},l="Props",s={unversionedId:"gift-card/gift-card-props",id:"gift-card/gift-card-props",title:"GiftCard - Props",description:"buttonProps",source:"@site/docs/gift-card/props.md",sourceDirName:"gift-card",slug:"/gift-card/props",permalink:"/docs/gift-card/props",draft:!1,editUrl:"https://github.com/weareseeed/rswps-site/tree/main/docs/gift-card/props.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{id:"gift-card-props",title:"GiftCard - Props",slug:"/gift-card/props",sidebar_label:"Props",sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Usage",permalink:"/docs/gift-card/usage"},next:{title:"Callbacks",permalink:"/docs/gift-card/callbacks"}},d={},c=[{value:"<code>buttonProps</code>",id:"buttonprops",level:2},{value:"<code>callbacks</code>",id:"callbacks",level:2},{value:"<code>children</code>",id:"children",level:2},{value:"<code>focus</code>",id:"focus",level:2},{value:"<code>includeInputLabels</code>",id:"includeinputlabels",level:2},{value:"<code>render()</code>",id:"render",level:2},{value:"<code>style</code>",id:"style",level:2}],u={toc:c};function m(e){var n=e.components,t=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"props"},"Props"),(0,o.kt)("h2",{id:"buttonprops"},(0,o.kt)("inlineCode",{parentName:"h2"},"buttonProps")),(0,o.kt)("p",null,"Props to be passed to the ",(0,o.kt)("inlineCode",{parentName:"p"},"<button>")," element. The following props are not supported: ",(0,o.kt)("inlineCode",{parentName:"p"},"aria-disabled"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"disabled"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"type"),". Since we use that to control the disabled state of the button, we don't support it."),(0,o.kt)("p",null,"But in addition to this we offer a ",(0,o.kt)("inlineCode",{parentName:"p"},"isLoading")," prop to control the loading state of the button a.k.a disabling the button."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"import { GiftCard, PaymentForm } from 'react-square-web-payments-sdk';\n\nexport default function MyApp() {\n  const onClick = () => {\n    // do something\n  };\n\n  return (\n    <PaymentForm>\n      <GiftCard\n        buttonProps={{\n          isLoading: true,\n          onClick: onClick,\n        }}\n      />\n    </PaymentForm>\n  );\n}\n")),(0,o.kt)("h2",{id:"callbacks"},(0,o.kt)("inlineCode",{parentName:"h2"},"callbacks")),(0,o.kt)("p",null,"Adds an event listener to the GiftCard instance. You can see ",(0,o.kt)("a",{parentName:"p",href:"/docs/gift-card/callbacks"},(0,o.kt)("strong",{parentName:"a"},"this page"))," for more details."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"import { GiftCard, PaymentForm } from 'react-square-web-payments-sdk';\n\nexport default function MyApp() {\n  return (\n    <PaymentForm>\n      <GiftCard\n        callbacks={{\n          cardBrandChanged(event) {\n            console.info(event);\n          },\n          focusClassAdded(event) {\n            console.info(event);\n          },\n        }}\n      />\n    </PaymentForm>\n  );\n}\n")),(0,o.kt)("h2",{id:"children"},(0,o.kt)("inlineCode",{parentName:"h2"},"children")),(0,o.kt)("p",null,"Make it possible to put any component inside. If children is/are given then ",(0,o.kt)("inlineCode",{parentName:"p"},"render")," is not applied."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"import { GiftCard, PaymentForm } from 'react-square-web-payments-sdk';\n\nexport default function MyApp() {\n  return (\n    <PaymentForm>\n      <GiftCard>Pay $10 with Gift Card</GiftCard>\n    </PaymentForm>\n  );\n}\n")),(0,o.kt)("h2",{id:"focus"},(0,o.kt)("inlineCode",{parentName:"h2"},"focus")),(0,o.kt)("p",null,"Sets the DOM focus of one of the input fields within the GiftCard form."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"import { GiftCard, PaymentForm } from 'react-square-web-payments-sdk';\n\nexport default function MyApp() {\n  return (\n    <PaymentForm>\n      <GiftCard\n        focus=\"cardNumber\" // Can be cardNumber, cvv, expirationDate or postalCode\n      />\n    </PaymentForm>\n  );\n}\n")),(0,o.kt)("h2",{id:"includeinputlabels"},(0,o.kt)("inlineCode",{parentName:"h2"},"includeInputLabels")),(0,o.kt)("p",null,"Render card form with input labels adjacent to corresponding input field"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"import { GiftCard, PaymentForm } from 'react-square-web-payments-sdk';\n\nexport default function MyApp() {\n  return (\n    <PaymentForm>\n      <GiftCard includeInputLabels />\n    </PaymentForm>\n  );\n}\n")),(0,o.kt)("h2",{id:"render"},(0,o.kt)("inlineCode",{parentName:"h2"},"render()")),(0,o.kt)("p",null,"Make it possible to put any component inside. If render is/are given then ",(0,o.kt)("inlineCode",{parentName:"p"},"children")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"buttonProps")," is not applied."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"import { GiftCard, PaymentForm } from 'react-square-web-payments-sdk';\n\nexport default function MyApp() {\n  return (\n    <PaymentForm>\n      {/* Render your own component using our component as a Prop */}\n      <GiftCard render={({ Button }) => <Button>Pay $10</Button>} />\n    </PaymentForm>\n  );\n}\n")),(0,o.kt)("h2",{id:"style"},(0,o.kt)("inlineCode",{parentName:"h2"},"style")),(0,o.kt)("p",null,"A map of .css classes and values that customize the style of the input fields"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"import { GiftCard, PaymentForm } from 'react-square-web-payments-sdk';\n\nexport default function MyApp() {\n  return (\n    <PaymentForm>\n      <GiftCard\n        style={{\n          input: {\n            fontSize: '14px',\n          },\n          'input::placeholder': {\n            color: '#771520',\n          },\n        }}\n      />\n    </PaymentForm>\n  );\n}\n")))}m.isMDXComponent=!0}}]);