"use strict";(self.webpackChunk_weareseeed_react_square_payments_docs=self.webpackChunk_weareseeed_react_square_payments_docs||[]).push([[656],{9667:function(e,t,n){n.d(t,{Z:function(){return o}});var a=n(7294),r=n(133);function o(e){var t=e.children;return a.createElement(r.Z,{applicationId:"sandbox-sq0idb-7KE3zXHZLG_X5EmLLptTYw",cardTokenizeResponseReceived:function(e,t){console.info({token:e,buyer:t})},createPaymentRequest:function(){return{countryCode:"US",currencyCode:"USD",pickupContact:{addressLines:["123 Main St"],city:"San Francisco",countryCode:"US",email:"john@doe.com",familyName:"Doe",givenName:"John",phone:"4155555555",postalCode:"94107",state:"CA"},total:{amount:"100",label:"Total"}}},createVerificationDetails:function(){return{amount:"1.00",billingContact:{addressLines:["123 Main Street","Apartment 1"],familyName:"Doe",givenName:"John",countryCode:"GB",city:"London"},currencyCode:"GBP",intent:"CHARGE"}},locationId:"4P550BZQ0TQZA"},t)}},7130:function(e,t,n){n.r(t),n.d(t,{assets:function(){return y},contentTitle:function(){return u},default:function(){return k},frontMatter:function(){return m},metadata:function(){return c},toc:function(){return f}});var a=n(7462),r=n(3366),o=(n(7294),n(4137)),i=n(8348),p=n(953),s=n(3259),l=n(9667),d=["components"],m={id:"afterpay-props",title:"Afterpay - Props",slug:"/afterpay/props",sidebar_label:"Props",sidebar_position:2},u="Props",c={unversionedId:"afterpay-clearpay/afterpay-props",id:"afterpay-clearpay/afterpay-props",title:"Afterpay - Props",description:"` or `",source:"@site/docs/afterpay-clearpay/props.mdx",sourceDirName:"afterpay-clearpay",slug:"/afterpay/props",permalink:"/docs/afterpay/props",draft:!1,editUrl:"https://github.com/weareseeed/rswps-site/tree/main/docs/afterpay-clearpay/props.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{id:"afterpay-props",title:"Afterpay - Props",slug:"/afterpay/props",sidebar_label:"Props",sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Usage",permalink:"/docs/afterpay/usage"},next:{title:"Usage",permalink:"/docs/cash-app-pay/usage"}},y={},f=[{value:"<code>&lt;Afterpay /&gt;</code> or <code>&lt;AfterpayButton /&gt;</code>",id:"afterpay--or-afterpaybutton-",level:2},{value:"<code>buttonColor</code>",id:"buttoncolor",level:3},{value:"Example",id:"example",level:4},{value:"<code>buttonType</code>",id:"buttontype",level:3},{value:"Example",id:"example-1",level:4},{value:"<code>finalCtaButtonType</code>",id:"finalctabuttontype",level:3},{value:"<code>Button</code>",id:"button",level:3},{value:"<code>&lt;AfterpayMessage /&gt;</code>",id:"afterpaymessage-",level:2},{value:"<code>badgeTheme</code>",id:"badgetheme",level:3},{value:"Example",id:"example-2",level:4},{value:"<code>modalLinkStyle</code>",id:"modallinkstyle",level:3},{value:"Example",id:"example-3",level:4},{value:"<code>modalTheme</code>",id:"modaltheme",level:3},{value:"Example",id:"example-4",level:4},{value:"<code>size</code>",id:"size",level:3},{value:"<code>&lt;AfterpayProvider /&gt;</code>",id:"afterpayprovider-",level:2},{value:"<code>onShippingAddressChange()</code>",id:"onshippingaddresschange",level:3},{value:"<code>onShippingOptionChange()</code>",id:"onshippingoptionchange",level:3},{value:"<code>&lt;AfterpayWidget /&gt;</code>",id:"afterpaywidget-",level:2},{value:"<code>includeBranding</code>",id:"includebranding",level:3},{value:"Eample",id:"eample",level:4}],h={toc:f};function k(e){var t=e.components,n=(0,r.Z)(e,d);return(0,o.kt)("wrapper",(0,a.Z)({},h,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"props"},"Props"),(0,o.kt)("h2",{id:"afterpay--or-afterpaybutton-"},(0,o.kt)("inlineCode",{parentName:"h2"},"<Afterpay />")," or ",(0,o.kt)("inlineCode",{parentName:"h2"},"<AfterpayButton />")),(0,o.kt)("h3",{id:"buttoncolor"},(0,o.kt)("inlineCode",{parentName:"h3"},"buttonColor")),(0,o.kt)("p",null,"Color of the button that initiates the Afterpay/Clearpay flow."),(0,o.kt)("p",null,"Possible values are: ",(0,o.kt)("inlineCode",{parentName:"p"},"black")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"mint"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"import { Afterpay, PaymentForm } from 'react-square-web-payments-sdk';\n\nexport default function MyApp() {\n  return (\n    <PaymentForm>\n      <Afterpay buttonColor=\"black\" />\n    </PaymentForm>\n  );\n}\n")),(0,o.kt)("h4",{id:"example"},"Example"),(0,o.kt)(l.Z,{mdxType:"PaymentForm"},(0,o.kt)(i.ZP,{buttonColor:"black",id:"rswps-button-color-black",mdxType:"Afterpay"}),(0,o.kt)(p.Z,{css:{height:0,margin:"12px 0px"},spanProps:{css:{display:"none"}},mdxType:"Divider"}),(0,o.kt)(i.ZP,{buttonColor:"mint",id:"rswps-button-color-mint",mdxType:"Afterpay"})),(0,o.kt)("h3",{id:"buttontype"},(0,o.kt)("inlineCode",{parentName:"h3"},"buttonType")),(0,o.kt)("p",null,"The flavor of button to use for your Afterpay/Clearpay flow. This will modify the text."),(0,o.kt)("p",null,"Possible values are: ",(0,o.kt)("inlineCode",{parentName:"p"},"checkout_with_afterpay"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"buy_now_with_afterpay")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"place_order_with_afterpay"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"import { Afterpay, PaymentForm } from 'react-square-web-payments-sdk';\n\nexport default function MyApp() {\n  return (\n    <PaymentForm>\n      <Afterpay buttonType=\"buy_now_with_afterpay\" />\n    </PaymentForm>\n  );\n}\n")),(0,o.kt)("h4",{id:"example-1"},"Example"),(0,o.kt)(l.Z,{mdxType:"PaymentForm"},(0,o.kt)(i.ZP,{buttonType:"checkout_with_afterpay",id:"rswps-button-type-checkout_with_afterpay",mdxType:"Afterpay"}),(0,o.kt)(p.Z,{css:{height:0,margin:"12px 0px"},spanProps:{css:{display:"none"}},mdxType:"Divider"}),(0,o.kt)(i.ZP,{buttonType:"buy_now_with_afterpay",id:"rswps-button-type-buy_now_with_afterpay",mdxType:"Afterpay"}),(0,o.kt)(p.Z,{css:{height:0,margin:"12px 0px"},spanProps:{css:{display:"none"}},mdxType:"Divider"}),(0,o.kt)(i.ZP,{buttonType:"place_order_with_afterpay",id:"rswps-button-type-place_order_with_afterpay",mdxType:"Afterpay"})),(0,o.kt)("h3",{id:"finalctabuttontype"},(0,o.kt)("inlineCode",{parentName:"h3"},"finalCtaButtonType")),(0,o.kt)("p",null,"The text for the completion button within the Afterpay/Clearpay CTA."),(0,o.kt)("p",null,"Possible values are: ",(0,o.kt)("inlineCode",{parentName:"p"},"review_my_order")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"buy_now"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"import { Afterpay, PaymentForm } from 'react-square-web-payments-sdk';\n\nexport default function MyApp() {\n  return (\n    <PaymentForm>\n      <Afterpay finalCtaButtonType=\"buy_now\" />\n    </PaymentForm>\n  );\n}\n")),(0,o.kt)("h3",{id:"button"},(0,o.kt)("inlineCode",{parentName:"h3"},"Button")),(0,o.kt)("p",null,"Option to use a custom button, as opposed to the provided Afterpay/Clearpay buttons. If true this will ignore all the above options."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"import { Afterpay, PaymentForm } from 'react-square-web-payments-sdk';\n\nexport default function MyApp() {\n  return (\n    <PaymentForm>\n      <Afterpay Button={() => <MyCustomButton />} />\n    </PaymentForm>\n  );\n}\n")),(0,o.kt)("h2",{id:"afterpaymessage-"},(0,o.kt)("inlineCode",{parentName:"h2"},"<AfterpayMessage />")),(0,o.kt)("h3",{id:"badgetheme"},(0,o.kt)("inlineCode",{parentName:"h3"},"badgeTheme")),(0,o.kt)("p",null,"See Afterpay/Clearpay's ",(0,o.kt)("a",{parentName:"p",href:"https://developers.afterpay.com/afterpay-online/docs/style-installment-messaging#badge-themes"},"Badge Themes")," documentation."),(0,o.kt)("p",null,"Possible values are: ",(0,o.kt)("inlineCode",{parentName:"p"},"black-on-mint"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"black-on-white"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"mint-on-black")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"white-on-black"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"import { AfterpayMessage, AfterpayProvider, PaymentForm } from 'react-square-web-payments-sdk';\n\nexport default function MyApp() {\n  return (\n    <PaymentForm>\n      <AfterpayProvider>\n        <AfterpayMessage badgeTheme=\"black-on-mint\" />\n      </AfterpayProvider>\n    </PaymentForm>\n  );\n}\n")),(0,o.kt)("h4",{id:"example-2"},"Example"),(0,o.kt)(l.Z,{mdxType:"PaymentForm"},(0,o.kt)(s.ZP,{mdxType:"AfterpayProvider"},(0,o.kt)(i.iQ,{id:"rswps-black-on-mint",badgeTheme:"black-on-mint",mdxType:"AfterpayMessage"}),(0,o.kt)(i.iQ,{id:"rswps-black-on-white",badgeTheme:"black-on-white",mdxType:"AfterpayMessage"}),(0,o.kt)(i.iQ,{id:"rswps-mint-on-black",badgeTheme:"mint-on-black",mdxType:"AfterpayMessage"}),(0,o.kt)(i.iQ,{id:"rswps-white-on-black",badgeTheme:"white-on-black",mdxType:"AfterpayMessage"}))),(0,o.kt)("h3",{id:"modallinkstyle"},(0,o.kt)("inlineCode",{parentName:"h3"},"modalLinkStyle")),(0,o.kt)("p",null,"The style of the button used to display the information modal. See Afterpay/Clearpay's ",(0,o.kt)("a",{parentName:"p",href:"https://developers.afterpay.com/afterpay-online/docs/advanced-configuration#customize-text"},"Customize Text")," documentation."),(0,o.kt)("p",null,"Possible values are: ",(0,o.kt)("inlineCode",{parentName:"p"},"circled-info-icon"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"circled-question-icon"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"learn-more-text"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"more-info-text")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"none"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"import { AfterpayMessage, AfterpayProvider, PaymentForm } from 'react-square-web-payments-sdk';\n\nexport default function MyApp() {\n  return (\n    <PaymentForm>\n      <AfterpayProvider>\n        <AfterpayMessage modalLinkStyle=\"circled-info-icon\" />\n      </AfterpayProvider>\n    </PaymentForm>\n  );\n}\n")),(0,o.kt)("h4",{id:"example-3"},"Example"),(0,o.kt)(l.Z,{mdxType:"PaymentForm"},(0,o.kt)(s.ZP,{mdxType:"AfterpayProvider"},(0,o.kt)(i.iQ,{id:"rswps-circled-info-icon",modalLinkStyle:"circled-info-icon",mdxType:"AfterpayMessage"}),(0,o.kt)(i.iQ,{id:"rswps-circled-question-icon",modalLinkStyle:"circled-question-icon",mdxType:"AfterpayMessage"}),(0,o.kt)(i.iQ,{id:"rswps-learn-more-text",modalLinkStyle:"learn-more-text",mdxType:"AfterpayMessage"}),(0,o.kt)(i.iQ,{id:"rswps-more-info-text",modalLinkStyle:"more-info-text",mdxType:"AfterpayMessage"}),(0,o.kt)(i.iQ,{id:"rswps-none",modalLinkStyle:"none",mdxType:"AfterpayMessage"}))),(0,o.kt)("h3",{id:"modaltheme"},(0,o.kt)("inlineCode",{parentName:"h3"},"modalTheme")),(0,o.kt)("p",null,"Theme for the information modal. See Afterpay/Clearpay's ",(0,o.kt)("a",{parentName:"p",href:"https://developers.afterpay.com/afterpay-online/docs/style-installment-messaging#modal-themes"},"Modal Themes")," documentation."),(0,o.kt)("p",null,"Possible values are: ",(0,o.kt)("inlineCode",{parentName:"p"},"mint")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"white"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"import { AfterpayMessage, AfterpayProvider, PaymentForm } from 'react-square-web-payments-sdk';\n\nexport default function MyApp() {\n  return (\n    <PaymentForm>\n      <AfterpayProvider>\n        <AfterpayMessage modalTheme=\"mint\" />\n      </AfterpayProvider>\n    </PaymentForm>\n  );\n}\n")),(0,o.kt)("h4",{id:"example-4"},"Example"),(0,o.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"Click on the button to see the modal."))),(0,o.kt)(l.Z,{mdxType:"PaymentForm"},(0,o.kt)(s.ZP,{mdxType:"AfterpayProvider"},(0,o.kt)(i.iQ,{id:"rswps-modal-theme-mint",modalTheme:"mint",mdxType:"AfterpayMessage"}),(0,o.kt)(i.iQ,{id:"rswps-modal-theme-white",badgeTheme:"black-on-white",modalTheme:"white",mdxType:"AfterpayMessage"}))),(0,o.kt)("h3",{id:"size"},(0,o.kt)("inlineCode",{parentName:"h3"},"size")),(0,o.kt)("p",null,"The size of the text."),(0,o.kt)("p",null,"Possible values are: ",(0,o.kt)("inlineCode",{parentName:"p"},"xs"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"sm"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"md")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"lg"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"import { AfterpayMessage, AfterpayProvider, PaymentForm } from 'react-square-web-payments-sdk';\n\nexport default function MyApp() {\n  return (\n    <PaymentForm>\n      <AfterpayProvider>\n        <AfterpayMessage size=\"xs\" />\n      </AfterpayProvider>\n    </PaymentForm>\n  );\n}\n")),(0,o.kt)(l.Z,{mdxType:"PaymentForm"},(0,o.kt)(s.ZP,{mdxType:"AfterpayProvider"},(0,o.kt)(i.iQ,{id:"rswps-size-xs",size:"xs",mdxType:"AfterpayMessage"}),(0,o.kt)(i.iQ,{id:"rswps-size-sm",size:"sm",mdxType:"AfterpayMessage"}),(0,o.kt)(i.iQ,{id:"rswps-size-md",size:"md",mdxType:"AfterpayMessage"}),(0,o.kt)(i.iQ,{id:"rswps-size-lg",size:"lg",mdxType:"AfterpayMessage"}))),(0,o.kt)("h2",{id:"afterpayprovider-"},(0,o.kt)("inlineCode",{parentName:"h2"},"<AfterpayProvider />")),(0,o.kt)("h3",{id:"onshippingaddresschange"},(0,o.kt)("inlineCode",{parentName:"h3"},"onShippingAddressChange()")),(0,o.kt)("p",null,"Occurs when a buyer chooses a shipping address in Afterpay/Clearpay."),(0,o.kt)("p",null,"It is required for you to subscribe to this event if shipping if marked a required."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"import { AfterpayButton, AfterpayProvider, PaymentForm } from 'react-square-web-payments-sdk';\n\nexport default function MyApp() {\n  return (\n    <PaymentForm>\n      <AfterpayProvider\n        onShippingAddressChange={(contact) => {\n          return {\n            shippingOptions: [\n              {\n                id: 'shippingOption1',\n                label: 'Free Shipping',\n                amount: '0.00',\n                total: '27.50', // Line Items + Discounts + Taxes + Shipping\n                taxLineItems: [\n                  {\n                    id: 'taxItem1',\n                    label: 'Taxes',\n                    amount: '2.50',\n                  },\n                ],\n              },\n              {\n                id: 'shippingOption2',\n                label: 'Express Shipping',\n                amount: '10.00',\n                total: '38.50', // Line Items + Discounts + Taxes + Shipping\n                taxLineItems: [\n                  {\n                    id: 'taxItem1',\n                    label: 'Taxes',\n                    amount: '3.50',\n                  },\n                ],\n              },\n            ],\n          };\n        }}\n      >\n        <AfterpayButton />\n      </AfterpayProvider>\n    </PaymentForm>\n  );\n}\n")),(0,o.kt)("h3",{id:"onshippingoptionchange"},(0,o.kt)("inlineCode",{parentName:"h3"},"onShippingOptionChange()")),(0,o.kt)("p",null,"Occurs when a buyer chooses a shipping option in Afterpay/Clearpay."),(0,o.kt)("p",null,"Subscribe to this event if you want to be alerted of shipping options changes. This event if informational only, and does not update the payment request."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"import { AfterpayButton, AfterpayProvider, PaymentForm } from 'react-square-web-payments-sdk';\n\nexport default function MyApp() {\n  return (\n    <PaymentForm>\n      <AfterpayProvider\n        onShippingOptionChange={(option) => {\n          console.info('Shipping option changed to', option);\n        }}\n      >\n        <AfterpayButton />\n      </AfterpayProvider>\n    </PaymentForm>\n  );\n}\n")),(0,o.kt)("h2",{id:"afterpaywidget-"},(0,o.kt)("inlineCode",{parentName:"h2"},"<AfterpayWidget />")),(0,o.kt)("h3",{id:"includebranding"},(0,o.kt)("inlineCode",{parentName:"h3"},"includeBranding")),(0,o.kt)("p",null,"Include the afterpay logo in the widget. Default ",(0,o.kt)("inlineCode",{parentName:"p"},"false"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"import { AfterpayProvider, AfterpayWidget, PaymentForm } from 'react-square-web-payments-sdk';\n\nexport default function MyApp() {\n  return (\n    <PaymentForm>\n      <AfterpayProvider>\n        <AfterpayWidget />\n      </AfterpayProvider>\n    </PaymentForm>\n  );\n}\n")),(0,o.kt)("h4",{id:"eample"},"Eample"),(0,o.kt)(l.Z,{mdxType:"PaymentForm"},(0,o.kt)(s.ZP,{mdxType:"AfterpayProvider"},(0,o.kt)(i.uD,{id:"rswps-widget-include-not-branding",mdxType:"AfterpayWidget"}),(0,o.kt)(p.Z,{css:{height:0,margin:"12px 0px"},spanProps:{css:{display:"none"}},mdxType:"Divider"}),(0,o.kt)(i.uD,{id:"rswps-widget-include-branding",includeBranding:!0,mdxType:"AfterpayWidget"}))))}k.isMDXComponent=!0},8348:function(e,t,n){n.d(t,{yl:function(){return d},iQ:function(){return m},uD:function(){return u},ZP:function(){return c}});var a=n(7294),r=n(3259),o=n(9227),i=n(3200),p=n(8152);const s=(0,p.F)({"0%, 100%":{opacity:1},"50%":{opacity:.5}}),l=(0,p.z)("div",{animation:`${s()} 2s cubic-bezier(0.4, 0, 0.6, 1) infinite`,background:"#F3F4F6",borderRadius:6,height:40});function d({Button:e,buttonColor:t="black",buttonType:n="buy_now_with_afterpay",finalCtaButtonType:p="buy_now",id:s="rswps-afterpay-button",...d}){const m=a.useRef(null),u=(0,r.NQ)(),{cardTokenizeResponseReceived:c}=(0,i.cI)(),y=a.useMemo((()=>({buttonColor:t,buttonType:n,finalCtaButtonType:p,useCustomButton:Boolean(e)})),[e,t,n,p]);return a.useEffect((()=>(u&&u?.attach(`#${s}`,y),()=>{u&&u?.destroy()})),[u]),(0,o.O)({listener:async e=>{if(e.stopPropagation(),u)try{const e=await u.tokenize();if("OK"===e.status)return c(e);let t=`Tokenization failed with status: ${e?.status}`;if(e?.errors)throw t+=` and errors: ${JSON.stringify(e?.errors)}`,new Error(t);console.warn(t)}catch(t){console.error(t)}else console.warn("Afterpay/Clearpay button was clicked, but no Afterpay/Clearpay instance was found.")},type:"click",element:m,options:{passive:!0}}),e?a.createElement(e,{...d,id:s,ref:m}):a.createElement("div",{...d,id:s,ref:m},u?null:a.createElement(l,null))}function m({badgeTheme:e="black-on-mint",component:t,id:n="rswps-afterpay-message",modalLinkStyle:i="circled-info-icon",modalTheme:p="mint",size:s="md",...l}){const d=a.useRef(null),m=(0,r.NQ)(),u=a.useMemo((()=>({badgeTheme:e,modalLinkStyle:i,modalTheme:p,size:s})),[e,i,p,s]);a.useEffect((()=>{m&&!t?.Message&&(async()=>{await(m?.attachMessaging(`#${n}`,u))})()}),[m,t?.Message,u]);(0,o.O)({listener:async e=>{e.stopPropagation(),m?.displayInformationModal({modalTheme:p})},type:"click",element:d,options:{passive:!0}});const c=t?.Message;return c?a.createElement(c,{...l,id:n,ref:d}):a.createElement("div",{...l,id:n})}function u({includeBranding:e,id:t="rswps-afterpay-widget",...n}){const o=a.useRef(null),i=(0,r.NQ)();return a.useEffect((()=>{i&&(async()=>{await(i?.attachCheckoutWidget(`#${t}`,{includeBranding:e}))})()}),[i,e]),a.createElement("div",{...n,id:t,ref:o})}function c(e){return a.createElement(r.ZP,null,a.createElement(d,{...e}))}},953:function(e,t,n){n.d(t,{Z:function(){return p}});var a=n(7294),r=n(8152);const o=(0,r.z)("div",{background:"rgba(0, 0, 0, 0.1)",color:"rgba(0, 0, 0, 0.55)",fontSize:12,height:1,lineHeight:"20px",margin:"30px 0",position:"relative",textTransform:"uppercase",width:"100%"}),i=(0,r.z)("span",{background:"#FAFAFA",fontFamily:"sans-serif, system-ui",left:"calc(50% - 1em - 5px)",padding:"0 10px",position:"absolute",top:-10}),p=({children:e,spanProps:t,...n})=>a.createElement(o,{...n},a.createElement(i,{...t},e??"or"))},3259:function(e,t,n){n.d(t,{NQ:function(){return p},ZP:function(){return i}});var a=n(7294),r=n(3200);const o=a.createContext(null);function i({children:e,onShippingAddressChange:t,onShippingOptionChange:n}){const[i,p]=a.useState(null),{createPaymentRequest:s,payments:l}=(0,r.cI)();if(!s)throw new Error("`createPaymentRequest()` is required when using digital wallets");return a.useEffect((()=>{const e=new AbortController,{signal:a}=e;return(async e=>{const a=l?.paymentRequest(s);if(!a)throw new Error("`paymentRequest` is required when using digital wallets");t&&a.addEventListener("afterpay_shippingaddresschanged",t),n&&a.addEventListener("afterpay_shippingoptionchanged",n);const r=await(l?.afterpayClearpay(a).then((t=>e.aborted?null:(p(t),t))));e.aborted&&await(r?.destroy())})(a),()=>{e.abort()}}),[s,l]),a.createElement(o.Provider,{value:i},e)}function p(){const e=a.useContext(o);if(void 0===e)throw new Error("`useAfterpay()` must be used within an `<AfterpayProvider>`");return e}}}]);