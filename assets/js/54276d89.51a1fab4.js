"use strict";(self.webpackChunk_weareseeed_react_square_payments_docs=self.webpackChunk_weareseeed_react_square_payments_docs||[]).push([[803],{4137:function(e,t,a){a.d(t,{Zo:function(){return i},kt:function(){return f}});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function c(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var d=n.createContext({}),s=function(e){var t=n.useContext(d),a=t;return e&&(a="function"==typeof e?e(t):c(c({},t),e)),a},i=function(e){var t=s(e.components);return n.createElement(d.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,d=e.parentName,i=o(e,["components","mdxType","originalType","parentName"]),p=s(a),f=r,h=p["".concat(d,".").concat(f)]||p[f]||u[f]||l;return a?n.createElement(h,c(c({ref:t},i),{},{components:a})):n.createElement(h,c({ref:t},i))}));function f(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,c=new Array(l);c[0]=p;var o={};for(var d in t)hasOwnProperty.call(t,d)&&(o[d]=t[d]);o.originalType=e,o.mdxType="string"==typeof e?e:r,c[1]=o;for(var s=2;s<l;s++)c[s]=a[s];return n.createElement.apply(null,c)}return n.createElement.apply(null,a)}p.displayName="MDXCreateElement"},814:function(e,t,a){a.r(t),a.d(t,{assets:function(){return i},contentTitle:function(){return d},default:function(){return f},frontMatter:function(){return o},metadata:function(){return s},toc:function(){return u}});var n=a(7462),r=a(3366),l=(a(7294),a(4137)),c=["components"],o={id:"card-callbacks",title:"Credit card callbacks",slug:"/card/callbacks",sidebar_label:"Callbacks",sidebar_position:3},d="Callbacks",s={unversionedId:"card/card-callbacks",id:"card/card-callbacks",title:"Credit card callbacks",description:"Adds an event listener to the instance of the Card element. The output of the events will look something like this:",source:"@site/docs/card/callbacks.md",sourceDirName:"card",slug:"/card/callbacks",permalink:"/docs/card/callbacks",editUrl:"https://github.com/weareseeed/rswps-site/tree/main/docs/card/callbacks.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{id:"card-callbacks",title:"Credit card callbacks",slug:"/card/callbacks",sidebar_label:"Callbacks",sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Props",permalink:"/docs/card/props"}},i={},u=[{value:"<code>cardBrandChanged()</code>",id:"cardbrandchanged",level:2},{value:"<code>errorClassAdded()</code>",id:"errorclassadded",level:2},{value:"<code>errorClassRemoved()</code>",id:"errorclassremoved",level:2},{value:"<code>escape()</code>",id:"escape",level:2},{value:"<code>focusClassAdded()</code>",id:"focusclassadded",level:2},{value:"<code>focusClassRemoved()</code>",id:"focusclassremoved",level:2},{value:"<code>postalCodeChanged()</code>",id:"postalcodechanged",level:2},{value:"<code>submit()</code>",id:"submit",level:2}],p={toc:u};function f(e){var t=e.components,a=(0,r.Z)(e,c);return(0,l.kt)("wrapper",(0,n.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"callbacks"},"Callbacks"),(0,l.kt)("p",null,"Adds an event listener to the instance of the Card element. The output of the events will look something like this:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "type": "cardBrandChanged",\n  "detail": {\n    "cardBrand": "masterCard",\n    "currentState": {\n      "hasErrorClass": false,\n      "hasFocusClass": true,\n      "isCompletelyValid": false,\n      "isEmpty": false,\n      "isPotentiallyValid": true\n    },\n    "eventType": "cardBrandChanged",\n    "field": "cardNumber",\n    "previousState": {\n      "hasErrorClass": false,\n      "hasFocusClass": true,\n      "isCompletelyValid": false,\n      "isEmpty": true,\n      "isPotentiallyValid": true\n    }\n  }\n}\n')),(0,l.kt)("h2",{id:"cardbrandchanged"},(0,l.kt)("inlineCode",{parentName:"h2"},"cardBrandChanged()")),(0,l.kt)("p",null,"Callback function that is called when the payment form detected a new likely credit card brand based on the card number."),(0,l.kt)("h2",{id:"errorclassadded"},(0,l.kt)("inlineCode",{parentName:"h2"},"errorClassAdded()")),(0,l.kt)("p",null,"Callback function that is called when a form field has an invalid value, and the corresponding error CSS class was added to the element."),(0,l.kt)("h2",{id:"errorclassremoved"},(0,l.kt)("inlineCode",{parentName:"h2"},"errorClassRemoved()")),(0,l.kt)("p",null,"Callback function that is called when an invalid value on a form field was corrected, and the corresponding error CSS class was removed from the element."),(0,l.kt)("h2",{id:"escape"},(0,l.kt)("inlineCode",{parentName:"h2"},"escape()")),(0,l.kt)("p",null,"Callback function that is called when the user pressed the ",(0,l.kt)("inlineCode",{parentName:"p"},"Escape")," key while editing a field."),(0,l.kt)("h2",{id:"focusclassadded"},(0,l.kt)("inlineCode",{parentName:"h2"},"focusClassAdded()")),(0,l.kt)("p",null,"Callback function that is called when a form field gained focus, and the corresponding focus CSS class was added to the element"),(0,l.kt)("h2",{id:"focusclassremoved"},(0,l.kt)("inlineCode",{parentName:"h2"},"focusClassRemoved()")),(0,l.kt)("p",null,"Callback function that is called when a form field lost focus, and the corresponding focus CSS class was removed from the element"),(0,l.kt)("h2",{id:"postalcodechanged"},(0,l.kt)("inlineCode",{parentName:"h2"},"postalCodeChanged()")),(0,l.kt)("p",null,"Callback function that is called when the current value of the postal code form field changed."),(0,l.kt)("h2",{id:"submit"},(0,l.kt)("inlineCode",{parentName:"h2"},"submit()")),(0,l.kt)("p",null,'Callback function that is called when the user has triggered submission of the form by pressing "Enter" while editing a field.'))}f.isMDXComponent=!0}}]);